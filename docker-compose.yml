version: '3.8'

services:
  mongodb:
    image: mongo:7
    container_name: civic-mongo
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-civic-reporting}
    restart: unless-stopped
    networks:
      - civic-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    container_name: civic-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - civic-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  modelservice:
    build:
      context: ./model_service
      dockerfile: Dockerfile
    container_name: civic-modelservice
    environment:
      MODEL_PORT: 8000
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - civic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 10s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: civic-backend
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      MODEL_SERVICE_URL: ${MODEL_SERVICE_URL}
      MONGODB_URI: ${MONGODB_URI}
      REDIS_URL: ${REDIS_URL}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
      - modelservice
    restart: unless-stopped
    networks:
      - civic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Docker/Dockerfile
    container_name: civic-frontend
    env_file:
      - .env
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - civic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: civic-worker
    command: node ./queues/imageAnalysisWorker.js
    env_file:
      - .env
    depends_on:
      - redis
      - mongodb
    networks:
      - civic-network
    restart: unless-stopped

volumes:
  mongo_data:
  redis_data:

networks:
  civic-network:
    driver: bridge
